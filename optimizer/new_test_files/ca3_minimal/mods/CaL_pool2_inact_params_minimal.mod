COMMENT

   **************************************************
   File generated by: neuroConstruct v1.5.1 
   **************************************************

   This file holds the implementation in NEURON of the Cell Mechanism:
   CaL (Type: Channel mechanism, Model: ChannelML based process)

   with parameters: 
   /channelml/@units = SI Units 
   /channelml/notes = ChannelML file containing a single Channel description 
   /channelml/channel_type/@name = CaL 
   /channelml/channel_type/status/@value = stable 
   /channelml/channel_type/status/comment = Equations adapted from Kali 
   /channelml/channel_type/status/contributor/name = Boglárka Sz?ke 
   /channelml/channel_type/notes = High-threshold Ca(L) Channel in pyramid neurons 
   /channelml/channel_type/authorList/modelTranslator/name = Boglárka Sz?ke 
   /channelml/channel_type/authorList/modelTranslator/institution = PPKE-ITK 
   /channelml/channel_type/authorList/modelTranslator/email = szoboce - at - digitus.itk.ppke.hu 
   /channelml/channel_type/current_voltage_relation/@cond_law = ohmic 
   /channelml/channel_type/current_voltage_relation/@ion = ca 
   /channelml/channel_type/current_voltage_relation/@charge = 2 
   /channelml/channel_type/current_voltage_relation/@default_gmax = 2.1 
   /channelml/channel_type/current_voltage_relation/@default_erev = 0.080 
   /channelml/channel_type/current_voltage_relation/@fixed_erev = yes 
   /channelml/channel_type/current_voltage_relation/gate/@name = X 
   /channelml/channel_type/current_voltage_relation/gate/@instances = 2 
   /channelml/channel_type/current_voltage_relation/gate/closed_state/@id = X0 
   /channelml/channel_type/current_voltage_relation/gate/open_state/@id = X 
   /channelml/channel_type/current_voltage_relation/gate/transition[1]/@name = alpha 
   /channelml/channel_type/current_voltage_relation/gate/transition[1]/@from = X0 
   /channelml/channel_type/current_voltage_relation/gate/transition[1]/@to = X 
   /channelml/channel_type/current_voltage_relation/gate/transition[1]/@expr_form = exponential 
   /channelml/channel_type/current_voltage_relation/gate/transition[1]/@rate = 300 
   /channelml/channel_type/current_voltage_relation/gate/transition[1]/@scale = 0.017 
   /channelml/channel_type/current_voltage_relation/gate/transition[1]/@midpoint = 0.0065 
   /channelml/channel_type/current_voltage_relation/gate/transition[2]/@name = beta 
   /channelml/channel_type/current_voltage_relation/gate/transition[2]/@from = X 
   /channelml/channel_type/current_voltage_relation/gate/transition[2]/@to = X0 
   /channelml/channel_type/current_voltage_relation/gate/transition[2]/@expr_form = exponential 
   /channelml/channel_type/current_voltage_relation/gate/transition[2]/@rate = 300 
   /channelml/channel_type/current_voltage_relation/gate/transition[2]/@scale = -0.017 
   /channelml/channel_type/current_voltage_relation/gate/transition[2]/@midpoint = 0.0065 
   /channelml/channel_type/impl_prefs/table_settings/@max_v = 0.05 
   /channelml/channel_type/impl_prefs/table_settings/@min_v = -0.1 
   /channelml/channel_type/impl_prefs/table_settings/@table_divisions = 3000 

// File from which this was generated: /home/kali/nC_projects/CA1_NEURON/cellMechanisms/CaL/CaL.xml

// XSL file with mapping to simulator: /home/kali/nC_projects/CA1_NEURON/cellMechanisms/CaL/ChannelML_v1.8.1_NEURONmod.xsl

ENDCOMMENT


?  This is a NEURON mod file generated from a ChannelML file

?  Unit system of original ChannelML file: SI Units

COMMENT
    ChannelML file containing a single Channel description
ENDCOMMENT

TITLE Channel: CaL

COMMENT
    High-threshold Ca(L) Channel in pyramid neurons, inactivation from Soldatov et al. 1997.
ENDCOMMENT


UNITS {
    (mA) = (milliamp)
    (mV) = (millivolt)
    (S) = (siemens)
    (um) = (micrometer)
    (molar) = (1/liter)
    (mM) = (millimolar)
    (l) = (liter)
}


    
NEURON {
      

    SUFFIX CaL_pool2_inact_params_minimal
    USEION ca READ cai WRITE ica VALENCE 2
    USEION cal WRITE ical VALENCE 2       ?  outgoing current is written
        
    RANGE gmax, gion
    
    RANGE Xinf, Xtau, Yinf, Ytau, A_alpha_X, B_alpha_X, Vhalf_alpha_X, A_beta_X, B_beta_X, Vhalf_beta_X, Y_v0, Y_k0, Y_tau0
    
}

PARAMETER { 
      

    gmax = 0.00021 (S/cm2)  ? default value, should be overwritten when conductance placed on cell
    cai (mM)
    ? ki = .001 (mM)

    Y_v0 = -8.4 (mV)
    Y_k0 = - 5.7 (mV)
    Y_tau0 = 484 (ms)
    
    A_alpha_X = 0.3 (1/ms)
    B_alpha_X = 17 (mV)
    Vhalf_alpha_X = 6.5 (mV)
    
    A_beta_X = 0.3 (1/ms)
    B_beta_X = - 17 (mV)
    Vhalf_beta_X = 6.5 (mV) 
}



ASSIGNED {
      

    v (mV)
    
    celsius (degC)
          

    ? Reversal potential of ca
    eca (mV)
    ? The outward flow of ion: ca calculated by rate equations...
    ica (mA/cm2)
    ical (mA/cm2)

    
    gion (S/cm2)
    Xinf
    Xtau (ms)
    Yinf
    Ytau (ms)
    
}

BREAKPOINT { 
                        
    SOLVE states METHOD cnexp
         

    gion = gmax*((X)^2)*Y        ?*h2(cai)    

    ica = gion*(v - eca)
    ical = ica        

}



INITIAL {
    
    eca = 80
        
    rates(v)
    X = Xinf
    Y = Yinf
        
    
}
    
STATE {
    X
    Y
    
}

DERIVATIVE states {
    rates(v)
    X' = (Xinf - X)/Xtau
    Y' = (Yinf - Y)/Ytau
    
}

?FUNCTION h2(cai(mM)) {
?	h2 = ki/(ki+cai)
?}

PROCEDURE rates(v(mV)) {  
    
    ? Note: not all of these may be used, depending on the form of rate equations
    LOCAL  alpha, beta, tau, inf, gamma, zeta, temp_adj_X
        
    TABLE Xinf, Xtau, Yinf, Ytau
 DEPEND celsius
 FROM -100 TO 50 WITH 3000
    
    
    UNITSOFF
    temp_adj_X = 1
    
            
                
           

        
    ?      ***  Adding rate equations for gate: X  ***
        
    ? Found a parameterised form of rate equation for alpha, using expression: A*exp((v-Vhalf)/B)
    ? A_alpha_X = 300
    ? B_alpha_X = 0.017
    ? Vhalf_alpha_X = 0.0065   
    
    ? Unit system in ChannelML file is SI units, therefore need to convert these to NEURON quanities...
    
    ?A_alpha_X = A_alpha_X * 0.0010   ? 1/ms 0.3
    ?B_alpha_X = B_alpha_X * 1000   ? mV 17
    ?Vhalf_alpha_X = Vhalf_alpha_X * 1000   ? mV 6.5
          
                     
    alpha = A_alpha_X * exp((v - Vhalf_alpha_X) / B_alpha_X)
    
    
    ? Found a parameterised form of rate equation for beta, using expression: A*exp((v-Vhalf)/B)
    ?A_beta_X = 300
    ?B_beta_X = -0.017
    ?Vhalf_beta_X = 0.0065   
    
    ? Unit system in ChannelML file is SI units, therefore need to convert these to NEURON quanities...
    
    ?A_beta_X = A_beta_X * 0.0010   ? 1/ms
    ?B_beta_X = B_beta_X * 1000   ? mV
    ?Vhalf_beta_X = Vhalf_beta_X * 1000   ? mV
          
                     
    beta = A_beta_X * exp((v - Vhalf_beta_X) / B_beta_X)
    
    Xtau = 1/(temp_adj_X*(alpha + beta))
    Xinf = alpha/(alpha + beta)
          
       
    
    ?     *** Finished rate equations for gate: X ***
    
    inf = 1 / ( 1 + exp (-(v - Y_v0) / Y_k0)) 
    Yinf = inf
    Ytau = Y_tau0
         

}


UNITSON


